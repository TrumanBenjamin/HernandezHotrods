<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title><%= title || 'Build' %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    :root {
      --bg: #0b0d10;
      --panel: #15181d;
      --panel2: #101317;
      --border: #232831;
      --text: #f1f5f9;
      --muted: #9aa3af;
      --accent: #e2e8f0;
      --radius: 16px;
      --container: 1100px;
      --text-max: 680px;
      --block-h: clamp(520px, 55vh, 860px);
      --hero-max-w: 1600px;
      --hero-min-w: 720px;
      --hero-h: clamp(600px, 70vh, 1000px);
    }

    body {
      margin: 0;
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
      background: var(--bg);
      color: var(--text);
      overflow-x: hidden;
    }

    .topnav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 50px 24px;
      background: #15181d;
      position: relative;
      z-index: 10;

    }

    .backlink {
      color: var(--muted);
      font-size: 14px;
      padding: 8px 12px;
      border-radius: 999px;
      border: 1px solid var(--border);
      background: transparent;
      text-decoration: none;
    }

    .backlink:hover {
      background: var(--panel);
      color: var(--text);
    }

    .full-bleed {
      width: 100vw;
      position: relative;
      left: 50%;
      right: 50%;
      margin-left: -50vw;
      margin-right: -50vw;
    }

    .hero {
      position: fixed;
      top: 0;
      left: 0;
      height: 100vh;
      width: 100vw;
      overflow: hidden;
      z-index: 0;
      transition: opacity 0.05s linear;
    }

    .hero-img {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      z-index: 0;
    }


    .build-title-sticky {
      font-size: 60px;
      font-weight: 800;
      color: var(--accent);
      text-align: right;
      padding: 24px 48px 16px;

      position: relative;
      z-index: 3;

      /* Constrain to right 2/3 of screen */
      width: 66.666vw;
      margin-left: auto; /* pushes it to the right */
      margin-right: 0;

      background: linear-gradient(to left, rgba(16, 19, 23, 0.85) 0%, transparent 100%);
      border-radius: 12px 0 0 12px;
      backdrop-filter: blur(6px);
      box-shadow: -4px 4px 20px rgba(0,0,0,0.3);
    }



    .hero-spacer {
      height: 100vh;
      background-color: transparent;
    }


    .container + .container,
    .block,
    .gallery,
    .cta {
      position: relative;
      z-index: 2;
    }

    .btn {
      display: inline-block;
      padding: 10px 16px;
      border-radius: 999px;
      background: var(--accent);
      color: #0b0d10;
      border: 1px solid var(--accent);
    }

    .block {
      display: grid;
      grid-template-columns: 1fr 1fr;
      align-items: stretch;
      height: var(--block-h);
    }

    .block-fade {
      height: 20px;
      background: linear-gradient(to top, #000000, transparent);
      width: 100vw;
      position: relative;
      left: 50%;
      right: 50%;
      margin-left: -50vw;
      margin-right: -50vw;
    }


    .block .info {
      background: linear-gradient(180deg, var(--panel), var(--panel2));
      border: 1px solid var(--border);
      border-right: none;
      height: 100%;
      display: grid;
      place-items: center;
    }

    .block .info-inner {
      width: 100%;
      max-width: var(--text-max);
      padding: 24px;
      max-height: calc(var(--block-h) - 48px);
      overflow: auto;
    }

    .block .info-inner h2 {
      margin: 0 0 10px;
      font-size: 14px;
      text-transform: uppercase;
      letter-spacing: 0.08em;
      color: var(--accent);
    }

    .block .info-inner ul {
      margin: 0;
      padding-left: 18px;
    }

    .block .media {
      border-left: 1px solid var(--border);
      overflow: hidden;
      background: var(--panel2);
      height: 100%;
    }

    .block .media img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
    }

    .block.mirror .info {
      order: 2;
      border-right: 1px solid var(--border);
      border-left: none;
    }

    .block.mirror .media {
      order: 1;
      border-left: none;
    }

    @media (max-width: 900px) {
      .topnav {
        flex-direction: column;
        align-items: flex-start;
        gap: 8px;
      }

    

      .full-bleed {
        left: auto;
        right: auto;
        margin-left: 0;
        margin-right: 0;
        width: auto;
      }

      .block {
        grid-template-columns: 1fr;
        height: auto;
      }

      .block .info-inner {
        max-height: none;
        overflow: visible;
      }

      .block .media img {
        aspect-ratio: 16/9;
        height: auto;
      }

    }
    
    @media (max-width: 600px) {
      .hero-title {
        font-size: 32px;
        padding: 8px 16px;
      }
    }
    
  </style>
</head>
<body>
  <div class="container">
    <div class="topnav">
      <a class="backlink" href="/builds">← Back to all builds</a>
    </div>
    

  <section class="hero">
    <img class="hero-img" src="<%= build.hero_image %>" alt="<%= build.name %>">
  </section>
  

      <div class="hero-spacer"></div>

      <div class="build-title-sticky">
        <% const firstName = build.owner_name?.split(' ')[0]; %>
        <%= firstName %><%= firstName?.endsWith('s') ? "'" : "'s" %> <%= build.name %>
      </div>
    

  </div>

  <div class="container">
    <% if (blocks && blocks.length) { %>
      <% blocks.forEach((blk, i) => { %>

        <% if (i === 0) { %>
          <div class="block-fade"></div>
        <% } %> 

        <section class="block full-bleed <%= i % 2 === 1 ? 'mirror' : '' %>">
          <div class="info">
            <div class="info-inner">
              <h2><%= blk.title %></h2>
              <ul>
                <% (blk.items || []).forEach(it => { %>
                  <li><%= it.text %></li>
                <% }) %>
              </ul>
            </div>
          </div>
          <div class="media">
            <% if (blk.imageUrl) { %>
              <img src="<%= blk.imageUrl %>" alt="<%= blk.imageAlt %>">
            <% } %>
          </div>
        </section>
      <% }) %>
    <% } %>
  </div>

  <% if (extraPhotos && extraPhotos.length) { %>
    <section>
      <h2 style="font-size:16px;letter-spacing:.06em;text-transform:uppercase;color:var(--accent);margin:24px 0 8px">More photos</h2>
      <div class="gallery">
        <% extraPhotos.forEach(p => { %>
          <img src="<%= p.url %>" alt="<%= p.alt || (build.name + ' photo') %>">
        <% }) %>
      </div>
    </section>
  <% } %>

  <div class="cta">
    <a class="btn" href="/contact">Start Your Build</a>
  </div>

  <script>
    // Setting a Dynamic hero size so that it remains the same size on all displays!!
    function updateHeroSpacerHeight() {
      const spacer = document.querySelector('.hero-spacer');
      const topnav = document.querySelector('.topnav');
      const title = document.querySelector('.build-title-sticky');
      const fade = document.querySelector('.block-fade');

      if (!spacer || !topnav || !title || !fade) {
        console.warn("❌ One or more elements not found.");
        return;
      }

      const totalOffset =
        topnav.offsetHeight +
        title.offsetHeight +
        fade.offsetHeight;

      spacer.style.height = `calc(100vh - ${totalOffset}px)`;
      console.log(`✅ Spacer height set to: 100vh - ${totalOffset}px`);
    }

    // Fade hero image on scroll

    function updateHeroOpacity() {
      const hero = document.querySelector('.hero');
      if (!hero) return;

      const scrollY = window.scrollY;
      const fadeDistance = 1000; // adjust this value as needed

      let opacity = 1;
      if (scrollY >= fadeDistance) {
        opacity = 0;
      } else {
        opacity = 1 - (scrollY / fadeDistance);
      }

      hero.style.opacity = opacity.toFixed(3);
    }

    window.addEventListener('load', updateHeroSpacerHeight);
    window.addEventListener('resize', updateHeroSpacerHeight);
    window.addEventListener('scroll', updateHeroOpacity);
    window.addEventListener('load', updateHeroOpacity);
</script>
</body>
</html>
